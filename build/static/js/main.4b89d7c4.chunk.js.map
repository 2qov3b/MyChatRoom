{"version":3,"sources":["SocketContext.js","components/VideoPlayer.jsx","components/Notifications.jsx","components/Options.jsx","App.js","index.js"],"names":["SocketContext","createContext","socket","io","ContextProvider","children","useState","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","useRef","userVideo","connectionRef","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","currentStream","current","srcObject","on","id","from","callerName","signal","isReceivingCall","Provider","value","callUser","peer","Peer","initiator","trickle","data","emit","userToCall","signalData","leaveCall","destroy","window","location","reload","answerCall","to","useStyles","makeStyles","theme","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","useContext","classes","Grid","container","className","Paper","item","xs","md","Typography","variant","gutterBottom","playsInline","muted","ref","autoPlay","Notifications","style","display","src","Button","color","onClick","root","marginTop","Options","idToCall","setIdToCall","Container","elevation","noValidate","autoComplete","TextField","label","onChange","e","target","fullWidth","text","startIcon","Assignment","fontSize","PhoneDisabled","Phone","appBar","borderRadius","alignItems","image","marginLeft","wrapper","App","AppBar","position","align","ReactDOM","render","document","getElementById"],"mappings":"+RAIMA,EAAgBC,0BAEhBC,EAASC,aAAG,mDAEZC,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA4BJ,qBAA5B,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBN,mBAAS,IAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAwBR,mBAAS,IAAjC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAAoBV,mBAAS,IAA7B,mBAAOW,EAAP,KAAWC,EAAX,KAEMC,EAAUC,mBACVC,EAAYD,mBACZE,EAAgBF,mBAEtBG,qBAAU,WACRC,UAAUC,aAAaC,aAAa,CAAEC,OAAO,EAAMC,OAAO,IACvDC,MAAK,SAACC,GACLlB,EAAUkB,GAEVX,EAAQY,QAAQC,UAAYF,KAGhC5B,EAAO+B,GAAG,MAAM,SAACC,GAAD,OAAQhB,EAAMgB,MAE9BhC,EAAO+B,GAAG,YAAY,YAAyC,IAAtCE,EAAqC,EAArCA,KAAYC,EAAyB,EAA/BvB,KAAkBwB,EAAa,EAAbA,OAC/CrB,EAAQ,CAAEsB,iBAAiB,EAAMH,OAAMtB,KAAMuB,EAAYC,gBAE1D,IAgDH,OACE,cAACrC,EAAcuC,SAAf,CAAwBC,MAAO,CAC7BzB,OACAR,eACAY,UACAE,YACAV,SACAE,OACAC,UACAL,YACAQ,KACAwB,SAvCa,SAACP,GAChB,IAAMQ,EAAO,IAAIC,IAAK,CAAEC,WAAW,EAAMC,SAAS,EAAOlC,WAEzD+B,EAAKT,GAAG,UAAU,SAACa,GACjB5C,EAAO6C,KAAK,WAAY,CAAEC,WAAYd,EAAIe,WAAYH,EAAMX,KAAMlB,EAAIJ,YAGxE6B,EAAKT,GAAG,UAAU,SAACH,GACjBT,EAAUU,QAAQC,UAAYF,KAGhC5B,EAAO+B,GAAG,gBAAgB,SAACI,GACzB7B,GAAgB,GAEhBkC,EAAKL,OAAOA,MAGdf,EAAcS,QAAUW,GAuBtBQ,UApBc,WAChBxC,GAAa,GAEbY,EAAcS,QAAQoB,UAEtBC,OAAOC,SAASC,UAgBdC,WA3De,WACjB/C,GAAgB,GAEhB,IAAMkC,EAAO,IAAIC,IAAK,CAAEC,WAAW,EAAOC,SAAS,EAAOlC,WAE1D+B,EAAKT,GAAG,UAAU,SAACa,GACjB5C,EAAO6C,KAAK,aAAc,CAAEV,OAAQS,EAAMU,GAAIzC,EAAKoB,UAGrDO,EAAKT,GAAG,UAAU,SAACH,GACjBT,EAAUU,QAAQC,UAAYF,KAGhCY,EAAKL,OAAOtB,EAAKsB,QAEjBf,EAAcS,QAAUW,IAgCxB,SAeGrC,KC3FDoD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrChC,MAAM,aACJiC,MAAO,SACND,EAAME,YAAYC,KAAK,MAAQ,CAC9BF,MAAO,UAGXG,cAAc,aACZC,eAAgB,UACfL,EAAME,YAAYC,KAAK,MAAQ,CAC9BG,cAAe,WAGnBC,MAAO,CACLC,QAAS,OACTC,OAAQ,kBACRC,OAAQ,YA+BCC,EA3BK,WAChB,MAA4EC,qBAAWvE,GAA/Ea,EAAR,EAAQA,KAAMN,EAAd,EAAcA,aAAcY,EAA5B,EAA4BA,QAASE,EAArC,EAAqCA,UAAWZ,EAAhD,EAAgDA,UAAWE,EAA3D,EAA2DA,OAAQI,EAAnE,EAAmEA,KAC7DyD,EAAUf,IAChB,OACI,eAACgB,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWH,EAAQT,cAAnC,UAEKpD,GACG,cAACiE,EAAA,EAAD,CAAOD,UAAWH,EAAQN,MAA1B,SACI,eAACO,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,SAAuCrE,GAAQ,wBAC/C,uBAAOsE,aAAW,EAACC,OAAK,EAACC,IAAKlE,EAASmE,UAAQ,EAACX,UAAWH,EAAQ7C,aAK9EpB,IAAiBE,GACd,cAACmE,EAAA,EAAD,CAAOD,UAAWH,EAAQN,MAA1B,SACI,eAACO,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,SAAuCnE,EAAKF,MAAQ,SACpD,uBAAOsE,aAAW,EAACE,IAAKhE,EAAWiE,UAAQ,EAACX,UAAWH,EAAQ7C,iB,SCvBxE4D,EAlBO,WACpB,MAA2ChB,qBAAWvE,GAA9CuD,EAAR,EAAQA,WAAYxC,EAApB,EAAoBA,KAAMR,EAA1B,EAA0BA,aAE1B,OACE,mCACGQ,EAAKuB,kBAAoB/B,GACxB,sBAAKiF,MAAO,CAAEC,QAAS,OAAQzB,eAAgB,gBAA/C,UACE,uBAAO0B,IAAI,yBAAyBJ,UAAQ,IAC5C,+BAAKvE,EAAKF,KAAV,kBACA,cAAC8E,EAAA,EAAD,CAAQV,QAAQ,YAAYW,MAAM,UAAUC,QAAStC,EAArD,0B,qDCLJE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmC,KAAM,CACJL,QAAS,OACTxB,cAAe,UAEjBF,cAAc,aACZH,MAAO,QACND,EAAME,YAAYC,KAAK,MAAQ,CAC9BG,cAAe,WAGnBS,UAAU,aACRd,MAAO,QACPS,OAAQ,SACRF,QAAS,GACRR,EAAME,YAAYC,KAAK,MAAQ,CAC9BF,MAAO,QAGXS,OAAQ,CACN0B,UAAW,IAEb5B,QAAS,CACPA,QAAS,IAEXD,MAAO,CACLC,QAAS,YACTC,OAAQ,uBA4CC4B,EAxCC,SAAC,GAAoB,IAAjB3F,EAAgB,EAAhBA,SAChB,EAA4EkE,qBAAWvE,GAA/EiB,EAAR,EAAQA,GAAIV,EAAZ,EAAYA,aAAcM,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,QAASL,EAAzC,EAAyCA,UAAWyC,EAApD,EAAoDA,UAAWT,EAA/D,EAA+DA,SAC/D,EAAgCnC,mBAAS,IAAzC,mBAAO2F,EAAP,KAAiBC,EAAjB,KACM1B,EAAUf,IAEhB,OACI,cAAC0C,EAAA,EAAD,CAAWxB,UAAWH,EAAQE,UAA9B,SACA,eAACE,EAAA,EAAD,CAAOwB,UAAW,GAAIzB,UAAWH,EAAQN,MAAzC,UACE,sBAAMS,UAAWH,EAAQsB,KAAMO,YAAU,EAACC,aAAa,MAAvD,SACE,eAAC7B,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAWH,EAAQT,cAAnC,UACE,eAACU,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWH,EAAQL,QAA7C,UACE,cAACa,EAAA,EAAD,CAAYE,cAAY,EAACD,QAAQ,KAAjC,8BACA,cAACsB,EAAA,EAAD,CAAWC,MAAM,sBAAYhE,MAAO3B,EAAM4F,SAAU,SAACC,GAAD,OAAO5F,EAAQ4F,EAAEC,OAAOnE,QAAQoE,WAAS,IAC7F,cAAC,kBAAD,CAAiBC,KAAM5F,EAAI0D,UAAWH,EAAQH,OAA9C,SACE,cAACsB,EAAA,EAAD,CAAQV,QAAQ,YAAYW,MAAM,UAAUgB,WAAS,EAACE,UAAW,cAACC,EAAA,EAAD,CAAYC,SAAS,UAAtF,+BAKJ,eAACvC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGJ,UAAWH,EAAQL,QAA7C,UACE,cAACa,EAAA,EAAD,CAAYE,cAAY,EAACD,QAAQ,KAAjC,yBACA,cAACsB,EAAA,EAAD,CAAWC,MAAM,aAAahE,MAAOyD,EAAUQ,SAAU,SAACC,GAAD,OAAOR,EAAYQ,EAAEC,OAAOnE,QAAQoE,WAAS,IACrGrG,IAAiBE,EAChB,cAACkF,EAAA,EAAD,CAAQV,QAAQ,YAAYW,MAAM,YAAYkB,UAAW,cAACG,EAAA,EAAD,CAAeD,SAAS,UAAYJ,WAAS,EAACf,QAAS3C,EAAWyB,UAAWH,EAAQH,OAA9I,qBAIA,cAACsB,EAAA,EAAD,CAAQV,QAAQ,YAAYW,MAAM,UAAUkB,UAAW,cAACI,EAAA,EAAD,CAAOF,SAAS,UAAYJ,WAAS,EAACf,QAAS,kBAAMpD,EAASwD,IAAWtB,UAAWH,EAAQH,OAAnJ,0BAOPhE,QClELoD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCwD,OAAO,aACLC,aAAc,GACd/C,OAAQ,aACRoB,QAAS,OACTxB,cAAe,MACfD,eAAgB,SAChBqD,WAAY,SACZzD,MAAO,QACPQ,OAAQ,mBAEPT,EAAME,YAAYC,KAAK,MAAQ,CAC9BF,MAAO,QAGX0D,MAAO,CACLC,WAAY,QAEdC,QAAS,CACP/B,QAAS,OACTxB,cAAe,SACfoD,WAAY,SACZzD,MAAO,YAmBE6D,EAfH,WACR,IAAMjD,EAAUf,IAChB,OACI,sBAAKkB,UAAWH,EAAQgD,QAAxB,UACI,cAACE,EAAA,EAAD,CAAQ/C,UAAWH,EAAQ2C,OAAQQ,SAAS,SAAS/B,MAAM,UAA3D,SACI,cAACZ,EAAA,EAAD,CAAYC,QAAQ,KAAK2C,MAAM,SAA/B,+BAEJ,cAAC,EAAD,IACA,cAAC,EAAD,UACI,cAAC,EAAD,U,OClChBC,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4b89d7c4.chunk.js","sourcesContent":["import React, { createContext, useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport Peer from 'simple-peer';\n\nconst SocketContext = createContext();\n//const socket = io('http://localhost:5000/');\nconst socket = io('https://modern-video-calling-app.herokuapp.com/');\n\nconst ContextProvider = ({ children }) => {\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState('');\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState('');\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n      .then((currentStream) => {\n        setStream(currentStream);\n\n        myVideo.current.srcObject = currentStream;\n      });\n\n    socket.on('me', (id) => setMe(id));\n\n    socket.on('callUser', ({ from, name: callerName, signal }) => {\n      setCall({ isReceivingCall: true, from, name: callerName, signal });\n    });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('answerCall', { signal: data, to: call.from });\n    });\n\n    peer.on('stream', (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    peer.signal(call.signal);\n\n    connectionRef.current = peer;\n  };\n\n  const callUser = (id) => {\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on('signal', (data) => {\n      socket.emit('callUser', { userToCall: id, signalData: data, from: me, name });\n    });\n\n    peer.on('stream', (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    socket.on('callAccepted', (signal) => {\n      setCallAccepted(true);\n\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n\n    connectionRef.current.destroy();\n\n    window.location.reload();\n  };\n\n  return (\n    <SocketContext.Provider value={{\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall,\n    }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { ContextProvider, SocketContext };","import React, { useContext } from 'react';\nimport { Grid, Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SocketContext } from '../SocketContext'\n\n\nconst useStyles = makeStyles((theme) => ({\n    video: {\n      width: '550px',\n      [theme.breakpoints.down('xs')]: {\n        width: '300px',\n      },\n    },\n    gridContainer: {\n      justifyContent: 'center',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n      },\n    },\n    paper: {\n      padding: '10px',\n      border: '2px solid black',\n      margin: '10px',\n    },\n  }));\n\nconst VideoPlayer = () => {\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n    const classes = useStyles();\n    return (\n        <Grid container className={classes.gridContainer}>\n            {/* Our Own Video */}\n            {stream && (\n                <Paper className={classes.paper}>\n                    <Grid item xs={12} md={6}>\n                        <Typography variant='h5' gutterBottom>{name || 'NAME / 名前'}</Typography>\n                        <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n                    </Grid>\n                </Paper>\n            )}\n            {/* User's Own Video */}\n            {callAccepted && !callEnded && (\n                <Paper className={classes.paper}>\n                    <Grid item xs={12} md={6}>\n                        <Typography variant='h5' gutterBottom>{call.name || 'Name'}</Typography>\n                        <video playsInline ref={userVideo} autoPlay className={classes.video} />\n                    </Grid>\n                </Paper>\n            )}\n        </Grid>\n    )\n}\n\nexport default VideoPlayer\n","import React, { useContext } from 'react';\nimport { Button } from '@material-ui/core';\nimport { SocketContext } from '../SocketContext';\n\nconst Notifications = () => {\n  const { answerCall, call, callAccepted } = useContext(SocketContext);\n\n  return (\n    <>\n      {call.isReceivingCall && !callAccepted && (\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <audio src='../audios/ringtone.mp3' autoPlay />\n          <h1>{call.name} is calling:</h1>\n          <Button variant=\"contained\" color=\"primary\" onClick={answerCall}>\n            Answer\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Notifications;","import React, { useContext, useState } from 'react';\nimport { Button, TextField, Grid, Typography, Container, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Assignment, Phone, PhoneDisabled } from '@material-ui/icons';\n\nimport { SocketContext } from '../SocketContext';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    gridContainer: {\n      width: '100%',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n      },\n    },\n    container: {\n      width: '600px',\n      margin: '35px 0',\n      padding: 0,\n      [theme.breakpoints.down('xs')]: {\n        width: '80%',\n      },\n    },\n    margin: {\n      marginTop: 20,\n    },\n    padding: {\n      padding: 20,\n    },\n    paper: {\n      padding: '10px 20px',\n      border: '2px solid black',\n    },\n   }));\n\nconst Options = ( { children } ) => {\n    const { me, callAccepted, name, setName, callEnded, leaveCall, callUser } = useContext(SocketContext)\n    const [idToCall, setIdToCall] = useState('')\n    const classes = useStyles();\n\n    return (\n        <Container className={classes.container}>\n        <Paper elevation={10} className={classes.paper}>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <Grid container className={classes.gridContainer}>\n              <Grid item xs={12} md={6} className={classes.padding}>\n                <Typography gutterBottom variant=\"h6\">Hello my friend!</Typography>\n                <TextField label=\"NAME / 名前\" value={name} onChange={(e) => setName(e.target.value)} fullWidth />\n                <CopyToClipboard text={me} className={classes.margin}>\n                  <Button variant=\"contained\" color=\"primary\" fullWidth startIcon={<Assignment fontSize=\"large\" />}>\n                    Copy Your ID\n                  </Button>\n                </CopyToClipboard>\n              </Grid>\n              <Grid item xs={12} md={6} className={classes.padding}>\n                <Typography gutterBottom variant=\"h6\">Let's chat!</Typography>\n                <TextField label=\"ID TO CALL\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} fullWidth />\n                {callAccepted && !callEnded ? (\n                  <Button variant=\"contained\" color=\"secondary\" startIcon={<PhoneDisabled fontSize=\"large\" />} fullWidth onClick={leaveCall} className={classes.margin}>\n                    Hang Up\n                  </Button>\n                ) : (\n                  <Button variant=\"contained\" color=\"primary\" startIcon={<Phone fontSize=\"large\" />} fullWidth onClick={() => callUser(idToCall)} className={classes.margin}>\n                    Call\n                  </Button>\n                )}\n              </Grid>\n            </Grid>\n          </form>\n          {children}\n        </Paper>\n      </Container>\n    )\n}\n\nexport default Options","import React from 'react';\nimport { Typography, AppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport VideoPlayer from './components/VideoPlayer';\nimport Notifications from './components/Notifications';\nimport Options from './components/Options';\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n      borderRadius: 15,\n      margin: '30px 100px',\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '600px',\n      border: '2px solid black',\n  \n      [theme.breakpoints.down('xs')]: {\n        width: '90%',\n      },\n    },\n    image: {\n      marginLeft: '15px',\n    },\n    wrapper: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      width: '100%',\n    },\n  }));\n\nconst App = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.wrapper}>\n            <AppBar className={classes.appBar} position='static' color='inherit'>\n                <Typography variant='h2' align='center'>KEN's Chat Room</Typography>\n            </AppBar>\n            <VideoPlayer />\n            <Options>\n                <Notifications />\n            </Options>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { ContextProvider } from './SocketContext';\n\nimport './styles.css';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}
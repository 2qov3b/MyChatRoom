{"ast":null,"code":"import _defineProperty from\"/Users/kenshen/00_Lab/01_Work/MyChatRoom/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import React,{useContext}from'react';import{Grid,Typography,Paper}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import{SocketContext}from'../SocketContext';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{video:_defineProperty({width:'550px'},theme.breakpoints.down('xs'),{width:'300px'}),gridContainer:_defineProperty({justifyContent:'center'},theme.breakpoints.down('xs'),{flexDirection:'column'}),paper:{padding:'10px',border:'2px solid black',margin:'10px'}};});var VideoPlayer=function VideoPlayer(){var _useContext=useContext(SocketContext),name=_useContext.name,callAccepted=_useContext.callAccepted,myVideo=_useContext.myVideo,userVideo=_useContext.userVideo,callEnded=_useContext.callEnded,stream=_useContext.stream,call=_useContext.call;var classes=useStyles();return/*#__PURE__*/_jsxs(Grid,{container:true,className:classes.gridContainer,children:[stream&&/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:name||'NAME / 名前'}),/*#__PURE__*/_jsx(\"video\",{playsInline:true,muted:true,ref:myVideo,autoPlay:true,className:classes.video})]})}),callAccepted&&!callEnded&&/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,md:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:call.name||'Name'}),/*#__PURE__*/_jsx(\"video\",{playsInline:true,ref:userVideo,autoPlay:true,className:classes.video})]})})]});};export default VideoPlayer;","map":{"version":3,"sources":["/Users/kenshen/00_Lab/01_Work/MyChatRoom/src/components/VideoPlayer.jsx"],"names":["React","useContext","Grid","Typography","Paper","makeStyles","SocketContext","useStyles","theme","video","width","breakpoints","down","gridContainer","justifyContent","flexDirection","paper","padding","border","margin","VideoPlayer","name","callAccepted","myVideo","userVideo","callEnded","stream","call","classes"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,KAA3B,KAAwC,mBAAxC,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,aAAT,KAA8B,kBAA9B,C,wFAGA,GAAMC,CAAAA,SAAS,CAAGF,UAAU,CAAC,SAACG,KAAD,QAAY,CACrCC,KAAK,kBACHC,KAAK,CAAE,OADJ,EAEFF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAFE,CAE6B,CAC9BF,KAAK,CAAE,OADuB,CAF7B,CADgC,CAOrCG,aAAa,kBACXC,cAAc,CAAE,QADL,EAEVN,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAFU,CAEqB,CAC9BG,aAAa,CAAE,QADe,CAFrB,CAPwB,CAarCC,KAAK,CAAE,CACLC,OAAO,CAAE,MADJ,CAELC,MAAM,CAAE,iBAFH,CAGLC,MAAM,CAAE,MAHH,CAb8B,CAAZ,EAAD,CAA5B,CAoBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACtB,gBAA4EnB,UAAU,CAACK,aAAD,CAAtF,CAAQe,IAAR,aAAQA,IAAR,CAAcC,YAAd,aAAcA,YAAd,CAA4BC,OAA5B,aAA4BA,OAA5B,CAAqCC,SAArC,aAAqCA,SAArC,CAAgDC,SAAhD,aAAgDA,SAAhD,CAA2DC,MAA3D,aAA2DA,MAA3D,CAAmEC,IAAnE,aAAmEA,IAAnE,CACA,GAAMC,CAAAA,OAAO,CAAGrB,SAAS,EAAzB,CACA,mBACI,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAEqB,OAAO,CAACf,aAAnC,WAEKa,MAAM,eACH,KAAC,KAAD,EAAO,SAAS,CAAEE,OAAO,CAACZ,KAA1B,uBACI,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,wBACI,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,YAAY,KAArC,UAAuCK,IAAI,EAAI,WAA/C,EADJ,cAEI,cAAO,WAAW,KAAlB,CAAmB,KAAK,KAAxB,CAAyB,GAAG,CAAEE,OAA9B,CAAuC,QAAQ,KAA/C,CAAgD,SAAS,CAAEK,OAAO,CAACnB,KAAnE,EAFJ,GADJ,EAHR,CAWKa,YAAY,EAAI,CAACG,SAAjB,eACG,KAAC,KAAD,EAAO,SAAS,CAAEG,OAAO,CAACZ,KAA1B,uBACI,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,wBACI,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,YAAY,KAArC,UAAuCW,IAAI,CAACN,IAAL,EAAa,MAApD,EADJ,cAEI,cAAO,WAAW,KAAlB,CAAmB,GAAG,CAAEG,SAAxB,CAAmC,QAAQ,KAA3C,CAA4C,SAAS,CAAEI,OAAO,CAACnB,KAA/D,EAFJ,GADJ,EAZR,GADJ,CAsBH,CAzBD,CA2BA,cAAeW,CAAAA,WAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Grid, Typography, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SocketContext } from '../SocketContext'\n\n\nconst useStyles = makeStyles((theme) => ({\n    video: {\n      width: '550px',\n      [theme.breakpoints.down('xs')]: {\n        width: '300px',\n      },\n    },\n    gridContainer: {\n      justifyContent: 'center',\n      [theme.breakpoints.down('xs')]: {\n        flexDirection: 'column',\n      },\n    },\n    paper: {\n      padding: '10px',\n      border: '2px solid black',\n      margin: '10px',\n    },\n  }));\n\nconst VideoPlayer = () => {\n    const { name, callAccepted, myVideo, userVideo, callEnded, stream, call } = useContext(SocketContext);\n    const classes = useStyles();\n    return (\n        <Grid container className={classes.gridContainer}>\n            {/* Our Own Video */}\n            {stream && (\n                <Paper className={classes.paper}>\n                    <Grid item xs={12} md={6}>\n                        <Typography variant='h5' gutterBottom>{name || 'NAME / 名前'}</Typography>\n                        <video playsInline muted ref={myVideo} autoPlay className={classes.video} />\n                    </Grid>\n                </Paper>\n            )}\n            {/* User's Own Video */}\n            {callAccepted && !callEnded && (\n                <Paper className={classes.paper}>\n                    <Grid item xs={12} md={6}>\n                        <Typography variant='h5' gutterBottom>{call.name || 'Name'}</Typography>\n                        <video playsInline ref={userVideo} autoPlay className={classes.video} />\n                    </Grid>\n                </Paper>\n            )}\n        </Grid>\n    )\n}\n\nexport default VideoPlayer\n"]},"metadata":{},"sourceType":"module"}